buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
    classpath 'com.bmuschko:gradle-docker-plugin:3.0.11'
  }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

repositories {
  mavenCentral()
  maven { url "http://repo.spring.io/libs-snapshot" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-starter-jdbc")
  compile("mysql:mysql-connector-java:5.1.13")
  compile("commons-dbcp:commons-dbcp:1.4")
  compile("org.apache.commons:commons-dbcp2:2.0")
  compile("org.apache.tomcat:tomcat-dbcp:8.0.0-RC1")
  compile group: 'com.h2database', name: 'h2', version: '1.0.60'


  providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

docker {
   url = System.properties['docker.client.url']
   if (System.properties['docker.native'] == "false") {
        certPath=new File(System.properties['docker.cert.path'])
   }
   if (System.properties['docker.remote_registry'] == "true") {
     registryCredentials {
         url = System.properties['docker.client.url']
         username = System.properties['docker.registry.username']
         password = System.properties['docker.registry.password']
         email = System.properties['docker.registry.email']
     }
   }
}

jar {
  baseName = 'rest-o-rant-api'
}

war {
  archiveName 'rest-o-rant-api.war'
}

task createDockerfile(type: Dockerfile) {
  destFile = project.file('build/docker/Dockerfile')
  from 'java:8'
  maintainer 'Vincent Partington <vpartington@xebialabs.com>'
  exposePort(8080)
  addFile("*.war", "app.war")
  entryPoint("java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "/app.war")
}

task copyWebapp(type: Copy) {
  dependsOn build
  from('build/libs') {
    include "**/*.war"
  }
  into('build/docker')
}

task buildDockerImage(type: DockerBuildImage) {
  dependsOn createDockerfile, copyWebapp
  inputDir = createDockerfile.destFile.parentFile
  tag = System.properties['docker.image.prefix']+"/rest-o-rant-api:$version"
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.11'
}

bootRun {
  systemProperties System.properties
  if ( project.hasProperty('args') ) {
    args project.args.split('\\s+')
  }
}
